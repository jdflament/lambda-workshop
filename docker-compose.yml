version: "3.4"

services:
  php:
    image: registry.gitlab.com/t-richard1/lambda-workshop/php:1.0.0
    build:
      context: .
      target: symfony_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        SKELETON: ${SKELETON:-symfony/skeleton}
        STABILITY: ${STABILITY:-stable}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: postgresql://lambda:lambda@database:5432/lambda?serverVersion=12.6
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}

  caddy:
    image: registry.gitlab.com/t-richard1/lambda-workshop/caddy:1.0.0
    build:
      context: .
      target: symfony_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp

  database:
    image: postgres:12.6-alpine
    environment:
      POSTGRES_DB: lambda
      # You should definitely change the password in production
      POSTGRES_PASSWORD: lambda
      POSTGRES_USER: lambda
    volumes:
      - db-data:/var/lib/postgresql/data:rw
        
  serverless:
    image: softinstigate/serverless:2.43.1
    working_dir: /srv
    volumes:
      - ./:/srv
      - ~/.aws:/root/.aws

volumes:
  php_socket:
  caddy_data:
  caddy_config:
  db-data:
